Leetcode 1436

You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. 
Return the destination city, that is, the city without any path outgoing to another city.
It is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.

paths = [["Ahmedabad","Surat"],["Surat","Gandhinagar"],["Gandhinagar","Vadodra"]]
def solution(paths):
    for p in paths:
        s=set(p[0])
    for path in paths:
        if path[1] not in s:
            return p[1]
            

Leetcode 1304

Given an integer n, return any array containing n unique integers such that they add up to 0.

for n in range(10):
    res=[]
    for i in range(1,n //2 + 1):
        res+=[-i,i]
        if n%2!=0:
            res.append(0)
    print(res)
    
    
Leetcode 1370

Given a string s. You should re-order the string using the following algorithm:

Pick the smallest character from s and append it to the result.
Pick the smallest character from s which is greater than the last appended character to the result and append it.
Repeat step 2 until you cannot pick more characters.
Pick the largest character from s and append it to the result.
Pick the largest character from s which is smaller than the last appended character to the result and append it.
Repeat step 5 until you cannot pick more characters.
Repeat the steps from 1 to 6 until you pick all characters from s.
In each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.

Return the result string after sorting s with this algorithm.


s='aaaabbbbcccc'
print(list(s))

s=list(s)
result=''
while s:
    for letter in sorted(set(s)):
        s.remove(letter)
        result+=letter
    for letter in sorted(set(s),reverse=True):
        s.remove(letter)
        result+=letter
print(result)


Leetcode 1374

Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times.
The returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them. 

for n in range (1,5):
    if n%2!=0:  print('a'*n)
    else: print('a'*(n-1)+'b')
